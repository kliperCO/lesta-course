.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_LockAudioDevice:
.\"   https://wiki.libsdl.org/SDL_LockAudioDevice
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision 60dcaff7eb25a01c9c87a5fed335b29a5625b95b
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_LockAudioDevice
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_LockAudioDevice 3 "SDL 3.0.0" "SDL" "SDL3 FUNCTIONS"
.SH NAME
SDL_LockAudioDevice \- Use this function to lock out the audio callback function for a specified device\[char46]
.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "int SDL_LockAudioDevice(SDL_AudioDeviceID dev);
.fi
.SH DESCRIPTION
The lock manipulated by these functions protects the audio callback
function specified in 
.BR SDL_OpenAudioDevice
()\[char46] During
a

.BR SDL_LockAudioDevice
()/
.BR SDL_UnlockAudioDevice
()
pair, you can be guaranteed that the callback function for that device is
not running, even if the device is not paused\[char46] While a device is locked,
any other unpaused, unlocked devices may still run their callbacks\[char46]

Calling this function from inside your audio callback is unnecessary\[char46] SDL
obtains this lock before calling your function, and releases it when the
function returns\[char46]

You should not hold the lock longer than absolutely necessary\[char46] If you hold
it too long, you'll experience dropouts in your audio playback\[char46] Ideally,
your application locks the device, sets a few variables and unlocks again\[char46]
Do not do heavy work while holding the lock for a device\[char46]

It is safe to lock the audio device multiple times, as long as you unlock
it an equivalent number of times\[char46] The callback will not run until the
device has been unlocked completely in this way\[char46] If your application fails
to unlock the device appropriately, your callback will never run, you might
hear repeating bursts of audio, and

.BR SDL_CloseAudioDevice
() will probably deadlock\[char46]

Internally, the audio device lock is a mutex; if you lock from two threads
at once, not only will you block the audio callback, you'll block the other
thread\[char46]

.SH FUNCTION PARAMETERS
.TP
.I dev
the ID of the device to be locked
.SH RETURN VALUE
Returns 0 on success or a negative error code on failure; call

.BR SDL_GetError
() for more information\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_UnlockAudioDevice (3)
