.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_TryLockMutex:
.\"   https://wiki.libsdl.org/SDL_TryLockMutex
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision 60dcaff7eb25a01c9c87a5fed335b29a5625b95b
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_TryLockMutex
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_TryLockMutex 3 "SDL 3.0.0" "SDL" "SDL3 FUNCTIONS"
.SH NAME
SDL_TryLockMutex \- Try to lock a mutex without blocking\[char46]
.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "int SDL_TryLockMutex(SDL_mutex * mutex) SDL_TRY_ACQUIRE(0, mutex);
.fi
.SH DESCRIPTION
This works just like 
.BR SDL_LockMutex
(), but if the mutex is
not available, this function returns

.BR
.BR SDL_MUTEX_TIMEOUT
immediately\[char46]

This technique is useful if you need exclusive access to a resource but
don't want to wait for it, and will return to it to try again later\[char46]

.SH FUNCTION PARAMETERS
.TP
.I mutex
the mutex to try to lock
.SH RETURN VALUE
Returns 0, 
.BR
.BR SDL_MUTEX_TIMEDOUT
, or -1 on error; call

.BR SDL_GetError
() for more information\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_CreateMutex (3),
.BR SDL_DestroyMutex (3),
.BR SDL_LockMutex (3),
.BR SDL_UnlockMutex (3)
