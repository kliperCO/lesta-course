.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_QueueAudio:
.\"   https://wiki.libsdl.org/SDL_QueueAudio
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision 60dcaff7eb25a01c9c87a5fed335b29a5625b95b
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_QueueAudio
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_QueueAudio 3 "SDL 3.0.0" "SDL" "SDL3 FUNCTIONS"
.SH NAME
SDL_QueueAudio \- Queue more audio on non-callback devices\[char46]
.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "int SDL_QueueAudio(SDL_AudioDeviceID dev, const void *data, Uint32 len);
.fi
.SH DESCRIPTION
If you are looking to retrieve queued audio from a non-callback capture
device, you want 
.BR SDL_DequeueAudio
() instead\[char46]

.BR SDL_QueueAudio
() will return -1 to signify an error if
you use it with capture devices\[char46]

SDL offers two ways to feed audio to the device: you can either supply a
callback that SDL triggers with some frequency to obtain more audio (pull
method), or you can supply no callback, and then SDL will expect you to
supply data at regular intervals (push method) with this function\[char46]

There are no limits on the amount of data you can queue, short of
exhaustion of address space\[char46] Queued data will drain to the device as
necessary without further intervention from you\[char46] If the device needs audio
but there is not enough queued, it will play silence to make up the
difference\[char46] This means you will have skips in your audio playback if you
aren't routinely queueing sufficient data\[char46]

This function copies the supplied data, so you are safe to free it when the
function returns\[char46] This function is thread-safe, but queueing to the same
device from two threads at once does not promise which buffer will be
queued first\[char46]

You may not queue audio on a device that is using an application-supplied
callback; doing so returns an error\[char46] You have to use the audio callback or
queue audio with this function, but not both\[char46]

You should not call 
.BR SDL_LockAudio
() on the device before
queueing; SDL handles locking internally for this function\[char46]

Note that SDL does not support planar audio\[char46] You will need to resample from
planar audio formats into a non-planar one (see

.BR SDL_AudioFormat
) before queuing audio\[char46]

.SH FUNCTION PARAMETERS
.TP
.I dev
the device ID to which we will queue audio
.TP
.I data
the data to queue to the device for later playback
.TP
.I len
the number of bytes (not samples!) to which
.BR data
points
.SH RETURN VALUE
Returns 0 on success or a negative error code on failure; call

.BR SDL_GetError
() for more information\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_ClearQueuedAudio (3),
.BR SDL_GetQueuedAudioSize (3)
