.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_UnlockMutex:
.\"   https://wiki.libsdl.org/SDL_UnlockMutex
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision 60dcaff7eb25a01c9c87a5fed335b29a5625b95b
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_UnlockMutex
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_UnlockMutex 3 "SDL 3.0.0" "SDL" "SDL3 FUNCTIONS"
.SH NAME
SDL_UnlockMutex \- Unlock the mutex\[char46]
.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "int SDL_UnlockMutex(SDL_mutex * mutex) SDL_RELEASE(mutex);
.fi
.SH DESCRIPTION
It is legal for the owning thread to lock an already-locked mutex\[char46] It must
unlock it the same number of times before it is actually made available for
other threads in the system (this is known as a "recursive mutex")\[char46]

It is an error to unlock a mutex that has not been locked by the current
thread, and doing so results in undefined behavior\[char46]

It is also an error to unlock a mutex that isn't locked at all\[char46]

.SH FUNCTION PARAMETERS
.TP
.I mutex
the mutex to unlock\[char46]
.SH RETURN VALUE
Returns 0 on success or a negative error code on failure; call

.BR SDL_GetError
() for more information\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

